<!DOCTYPE html>
<html lang="ru">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Тренажёр: Решение уравнений</title>
    <style>
        /* --- Общие стили для страницы --- */
        body {
            font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Helvetica, Arial, sans-serif;
            background-color: #f0f2f5;
            display: flex;
            justify-content: center;
            align-items: center;
            min-height: 100vh;
            margin: 0;
            padding: 20px;
            box-sizing: border-box;
        }
        /* --- Контейнер тренажёра --- */
        .trainer-container {
            background-color: #ffffff;
            border-radius: 12px;
            box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);
            padding: 25px 35px;
            width: 100%;
            max-width: 800px;
        }
        /* --- Заголовки --- */
        h1 {
            text-align: center;
            color: #1c1e21;
            margin-top: 0;
            margin-bottom: 5px;
            font-size: 24px;
        }
        h1 + p {
            text-align: center;
            color: #606770;
            margin-top: 0;
            margin-bottom: 25px;
        }
        /* --- Информационная панель (прогресс и таймер) --- */
        .info-bar {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-bottom: 25px;
            padding: 15px;
            background-color: #f7f8fa;
            border-radius: 8px;
        }
        .progress-bar {
            display: flex;
            gap: 10px;
        }
        .progress-square {
            width: 28px;
            height: 28px;
            background-color: #e4e6eb;
            border-radius: 6px;
            transition: background-color 0.3s ease;
        }
        .progress-square.correct { background-color: #31a24c; }
        .progress-square.incorrect { background-color: #e02c4d; }
        #timer {
            font-size: 20px;
            font-weight: 600;
            color: #1c1e21;
            background-color: #e4e6eb;
            padding: 5px 15px;
            border-radius: 18px;
        }
        /* --- Блок с заданием --- */
        .problem {
            display: flex;
            align-items: center;
            margin-bottom: 20px;
            font-size: 18px;
            font-family: 'Courier New', Courier, monospace;
            font-weight: 600;
        }
        .problem-text {
            flex-grow: 1;
            line-height: 1.4;
        }
        .problem input {
            width: 150px;
            padding: 10px;
            border: 2px solid #ccd0d5;
            border-radius: 6px;
            font-size: 18px;
            text-align: right;
            margin-left: 15px;
            transition: border-color 0.2s ease;
            -moz-appearance: textfield; /* Для Firefox */
        }
        /* --- Убираем стрелки в полях для чисел --- */
        .problem input::-webkit-outer-spin-button,
        .problem input::-webkit-inner-spin-button {
            -webkit-appearance: none;
            margin: 0;
        }
        .problem input:focus {
            outline: none;
            border-color: #1b74e4;
        }
        /* --- Кнопки --- */
        .actions {
            text-align: center;
            margin-top: 30px;
        }
        .actions button {
            padding: 12px 30px;
            font-size: 16px;
            font-weight: 600;
            border: none;
            border-radius: 6px;
            cursor: pointer;
            transition: background-color 0.2s ease, transform 0.1s ease;
        }
        #checkBtn {
            background-color: #1b74e4;
            color: white;
        }
        #checkBtn:hover { background-color: #1868cd; }
        #checkBtn:active { transform: scale(0.98); }
        #checkBtn:disabled { background-color: #ccd0d5; cursor: not-allowed; }
        /* --- Блок результатов --- */
        #results {
            text-align: center;
            margin-top: 25px;
            font-size: 18px;
        }
        #printBtn {
            background-color: #31a24c;
            color: white;
            margin-top: 15px;
        }
        .hidden { display: none; }

        /* --- Адаптация для мобильных устройств --- */
        @media (max-width: 600px) {
            .trainer-container {
                padding: 20px 25px;
            }
            .problem {
                flex-direction: column;
                align-items: flex-start;
            }
            .problem input {
                width: 100%;
                margin-left: 0;
                margin-top: 10px;
                box-sizing: border-box;
            }
            h1 {
                font-size: 22px;
            }
        }
    </style>
</head>
<body>

    <div class="trainer-container">
        <h1>Тренажёр уравнений</h1>
        <p>Решите уравнения и впишите ответ</p>

        <div class="info-bar">
            <div class="progress-bar">
                <div class="progress-square"></div>
                <div class="progress-square"></div>
                <div class="progress-square"></div>
            </div>
            <div id="timer">10:00</div>
        </div>

        <div id="problems-container">
            <!-- Задания будут сгенерированы здесь -->
        </div>

        <div class="actions">
            <button id="checkBtn">Проверить</button>
        </div>

        <div id="results" class="hidden">
            <p id="score-text"></p>
            <button id="printBtn" class="hidden">Распечатать PDF с заданиями</button>
        </div>
    </div>

    <script>
        // --- Утилита для генерации случайных целых чисел ---
        const getRandomInt = (min, max) => Math.floor(Math.random() * (max - min + 1)) + min;
        
        // --- Определения типов заданий ---
        const problemTypes = [
            {
                id: "УС1",
                generator: () => {
                    while (true) {
                        let k = getRandomInt(501, 999);
                        if (k % 10 === 0) k += 1;
                        const n1 = getRandomInt(4, 9);
                        let n4 = getRandomInt(1001, 99998);
                        if (n4 % 10 === 0) n4 += 2;
                        const n5 = k * n1 + n4;
                        let n3 = getRandomInt(501, 998);
                        if (n3 % 10 === 0) n3 += 3;
                        const n2 = getRandomInt(4, 9);

                        // Решаем уравнение: n1 * (x / n2 - n3) + n4 = n5
                        // x = ((n5 - n4) / n1 + n3) * n2
                        const term1 = n5 - n4;
                        if (term1 % n1 !== 0) continue;
                        const term2 = term1 / n1;
                        const answer = (term2 + n3) * n2;
                        if (!Number.isInteger(answer)) continue;

                        const problemStr = `${n1} * (x : ${n2} - ${n3}) + ${n4} = ${n5}`;
                        return { problem: problemStr, answer };
                    }
                }
            },
            {
                id: "УС2",
                generator: () => {
                    while (true) {
                        let n4 = getRandomInt(501, 999);
                        if (n4 % 10 === 0) n4 += 1;
                        let n5 = getRandomInt(1001, 9998);
                        if (n5 % 10 === 0) n5 += 2;
                        const n3 = getRandomInt(4, 9);
                        const k = getRandomInt(4, 9);
                        const n2 = (n4 + n5) * n3 - k;
                        let p = getRandomInt(5001, 9998);
                        if (p % 10 === 0) p += 1;
                        const n1 = p * k;

                        // Решаем уравнение: (n1 / x + n2) / n3 - n4 = n5
                        // x = n1 / (((n5 + n4) * n3) - n2)
                        const term1 = (n5 + n4) * n3 - n2;
                        if (term1 === 0 || n1 % term1 !== 0) continue;
                        const answer = n1 / term1;
                        if (!Number.isInteger(answer) || answer <= 0) continue;

                        const problemStr = `(${n1} : x + ${n2}) : ${n3} - ${n4} = ${n5}`;
                        return { problem: problemStr, answer };
                    }
                }
            },
            {
                id: "УС3",
                generator: () => {
                    while (true) {
                        let k = getRandomInt(1001, 9998);
                        if (k % 10 === 0) k += 123;
                        const n3 = getRandomInt(3, 9);
                        let p = getRandomInt(501, 998);
                        if (p % 10 === 0) p -= 123;
                        const n5 = getRandomInt(4, 9);
                        const n1 = n5 * p;
                        let n4 = getRandomInt(1001, 6998);
                        if (n4 % 10 === 0) n4 += 78;
                        let m = getRandomInt(501, 998);
                        if (m % 10 === 0) m -= 7;
                        const n2 = m * n3 + (n1 / n5 + n4);
                        
                        // Решаем уравнение: n1 / (n2 - n3 * x - n4) = n5
                        // x = (n2 - n4 - n1 / n5) / n3
                        const term1 = n1 / n5;
                        const term2 = n2 - n4 - term1;
                        if (term2 % n3 !== 0) continue;
                        const answer = term2 / n3;
                        if (!Number.isInteger(answer)) continue;

                        const problemStr = `${n1} : (${n2} - ${n3} * x - ${n4}) = ${n5}`;
                        return { problem: problemStr, answer };
                    }
                }
            },
            {
                id: "УС4",
                generator: () => {
                    while (true) {
                        let n3 = getRandomInt(301, 499);
                        if (n3 % 10 === 0) n3 += 123;
                        let n2 = getRandomInt(1001, 1999);
                        if (n2 % 10 === 0) n2 -= 68;
                        const n1 = getRandomInt(n2 + n3 + 1001, 3499);
                        const n4 = getRandomInt(n1 - n2 - n3 + 4, n1 - n2 - n3 + 9);
                        let n5 = getRandomInt(501, 999);
                        if (n5 % 100 === 0) n5 += 103;

                        // Решаем: n1 - n2 - (n4 - x / n5) = n3
                        // x = (n4 - (n1 - n2 - n3)) * n5
                        const term1 = n1 - n2 - n3;
                        const answer = (n4 - term1) * n5;
                        if (!Number.isInteger(answer)) continue;

                        const problemStr = `${n1} - ${n2} - (${n4} - x : ${n5}) = ${n3}`;
                        return { problem: problemStr, answer };
                    }
                }
            },
            {
                id: "УС5",
                generator: () => {
                    while (true) {
                        let k = getRandomInt(501, 999);
                        if (k % 10 === 0) k += 49;
                        const n3 = getRandomInt(4, 9);
                        let n1 = getRandomInt(101, 999);
                        if (n1 % 10 === 0) n1 -= 17;
                        let n5 = getRandomInt(101, 499);
                        if (n5 % 10 === 0) n5 += 78;
                        const n4 = getRandomInt(3, 9);
                        const n2 = (n1 - n5) * n4 - k;

                        // Решаем: n1 - (n2 + x * n3) / n4 = n5
                        // x = (((n1 - n5) * n4) - n2) / n3
                        const term1 = (n1 - n5) * n4;
                        const term2 = term1 - n2;
                        if (term2 % n3 !== 0) continue;
                        const answer = term2 / n3;
                        if (!Number.isInteger(answer)) continue;

                        const problemStr = `${n1} - (${n2} + x * ${n3}) : ${n4} = ${n5}`;
                        return { problem: problemStr, answer };
                    }
                }
            },
            {
                id: "УС6",
                generator: () => {
                    while (true) {
                        let n1 = getRandomInt(101, 998);
                        if (n1 % 10 === 0) n1 -= 3;
                        const n2 = getRandomInt(4, 9);
                        let p = getRandomInt(Math.ceil(101 / n2), Math.floor(998 / n2));
                        if (p % 10 === 0) p -= 82;
                        const n5 = n1 + n2 * p;
                        const p_val = (n5 - n1) / n2; // Это p
                        const n3 = getRandomInt(p_val + 3, p_val + 9);
                        const t = n3 - p_val; // Это должно быть однозначным (2 < t < 10), что выполняется
                        if (t <= 1) continue;
                        let k = getRandomInt(101, 998);
                        if (k % 10 === 0) k += 26;
                        const n4 = k * t;

                        // Решаем: n1 + n2 * (n3 - n4 / x) = n5
                        // x = n4 / (n3 - (n5 - n1) / n2)
                        const term1 = n5 - n1;
                        if (term1 % n2 !== 0) continue;
                        const term2 = term1 / n2;
                        const denominator = n3 - term2;
                        if (denominator === 0 || n4 % denominator !== 0) continue;
                        const answer = n4 / denominator;
                        if (!Number.isInteger(answer)) continue;

                        const problemStr = `${n1} + ${n2} * (${n3} - ${n4} : x) = ${n5}`;
                        return { problem: problemStr, answer };
                    }
                }
            },
            {
                id: "УС7",
                generator: () => {
                    while (true) {
                        const n5 = getRandomInt(4, 9);
                        let n1 = getRandomInt(4, 9);
                        if (n1 === 5) n1 = 4;
                        const k = getRandomInt(Math.ceil(501 / n1), Math.floor(699 / n1));
                        const n2 = n1 * k;
                        const base_n3 = (n5 * n2) / n1;
                        let n3 = getRandomInt(base_n3 + 501, base_n3 + 999);
                        if (n3 % 10 === 0) n3 += 37;
                        const n4 = getRandomInt(4, 9);

                        // Решаем: n1 * (n3 - x / n4) / n2 = n5
                        // x = (n3 - (n5 * n2) / n1) * n4
                        const term1 = (n5 * n2);
                        if (term1 % n1 !== 0) continue;
                        const term2 = term1 / n1;
                        const answer = (n3 - term2) * n4;
                        if (!Number.isInteger(answer)) continue;

                        const problemStr = `${n1} * (${n3} - x : ${n4}) : ${n2} = ${n5}`;
                        return { problem: problemStr, answer };
                    }
                }
            },
            {
                id: "УС8",
                generator: () => {
                    while (true) {
                        const n4 = getRandomInt(4, 9);
                        let k = getRandomInt(501, 998);
                        if (k % 10 === 0) k -= 21;
                        const n5 = n4 * k;
                        const n2 = getRandomInt(4, 9);
                        const p = getRandomInt(Math.ceil(501 / n2), Math.floor(999 / n2));
                        const n1 = k - n2 * p;
                        const n3 = getRandomInt(4, 9);

                        // Решаем: (n1 + x * n2 / n3) * n4 = n5
                        // x = ((n5 / n4 - n1) * n3) / n2
                        const term1 = n5 / n4;
                        const term2 = (term1 - n1) * n3;
                        if (term2 % n2 !== 0) continue;
                        const answer = term2 / n2;
                        if (!Number.isInteger(answer)) continue;
                        
                        const problemStr = `(${n1} + x * ${n2} : ${n3}) * ${n4} = ${n5}`;
                        return { problem: problemStr, answer };
                    }
                }
            },
            {
                id: "УС9",
                generator: () => {
                    while (true) {
                        let m = getRandomInt(501, 998);
                        if (m % 10 === 0) m -= 17;
                        const p = getRandomInt(4, 9);
                        const n2 = m * p;
                        const n3 = getRandomInt(4, 9);
                        const h = p * n3;
                        const k = getRandomInt(4, 9);
                        const n4 = getRandomInt(4, 9);
                        const n5 = n4 * k;
                        const n1 = h * k;

                        // Решаем: n1 / ((n2 / (x * n3)) * n4) = n5
                        // x = (n2 * n4 * n5) / (n1 * n3)
                        const numerator = n2 * n4 * n5;
                        const denominator = n1 * n3;
                        if (denominator === 0 || numerator % denominator !== 0) continue;
                        const answer = numerator / denominator;
                        if (!Number.isInteger(answer)) continue;

                        const problemStr = `${n1} : (${n2} : x * ${n3}) * ${n4} = ${n5}`;
                        return { problem: problemStr, answer };
                    }
                }
            },
            {
                id: "УС10",
                generator: () => {
                    while (true) {
                        let h = getRandomInt(51, 98);
                        if (h % 10 === 0) h += 1;
                        const t = getRandomInt(4, 9);
                        const n3 = t * h;
                        let p = getRandomInt(201, 599);
                        if (p % 10 === 0) p += 17;
                        const n2 = p + t;
                        const n4 = getRandomInt(4, 9);
                        
                        let k = n4 * p;
                        // Проверяем, что k - четырехзначное
                        if (k < 1000 || k > 9999) continue;

                        if (k % 10 === 0) k += 123;
                        const n1 = getRandomInt(1001, 9999);
                        const n5 = n1 + k;

                        // Решаем: n1 + (n2 - n3 * x) * n4 = n5
                        // x = (n2 - (n5 - n1) / n4) / n3
                        const term1 = n5 - n1;
                        if (term1 % n4 !== 0) continue;
                        const term2 = term1 / n4;
                        const term3 = n2 - term2;
                        if (term3 % n3 !== 0) continue;
                        const answer = term3 / n3;
                        if (!Number.isInteger(answer)) continue;

                        const problemStr = `${n1} + (${n2} - ${n3} * x) * ${n4} = ${n5}`;
                        return { problem: problemStr, answer };
                    }
                }
            }
        ];

        // --- Логика тренажёра (остается без изменений) ---
        const problemsContainer = document.getElementById('problems-container');
        const checkBtn = document.getElementById('checkBtn');
        const timerEl = document.getElementById('timer');
        const progressSquares = document.querySelectorAll('.progress-square');
        const resultsEl = document.getElementById('results');
        const scoreTextEl = document.getElementById('score-text');
        const printBtn = document.getElementById('printBtn');
        let generatedProblems = [];
        let timerInterval;

        function shuffleArray(array) {
            for (let i = array.length - 1; i > 0; i--) {
                const j = Math.floor(Math.random() * (i + 1));
                [array[i], array[j]] = [array[j], array[i]];
            }
        }
        
        function init() {
            shuffleArray(problemTypes);
            const selectedTypes = problemTypes.slice(0, 3);
            generatedProblems = selectedTypes.map(type => type.generator());
            problemsContainer.innerHTML = '';
            generatedProblems.forEach((p, index) => {
                const problemEl = document.createElement('div');
                problemEl.className = 'problem';
                // Заменяем 'x' на ' x ' для лучшей читаемости, но не если это часть слова (нерелевантно здесь)
                const displayProblem = p.problem.replace(/x/g, ' x ');
                problemEl.innerHTML = `
                    <span class="problem-text">${index + 1}. ${displayProblem}</span>
                    <input type="number" class="answer-input">
                `;
                problemsContainer.appendChild(problemEl);
            });
            startTimer(600); // 10 минут
        }

        function startTimer(duration) {
            if(timerInterval) clearInterval(timerInterval);
            const endTime = Date.now() + duration * 1000;
            timerInterval = setInterval(() => {
                const timeLeft = Math.round((endTime - Date.now()) / 1000);
                if (timeLeft < 0) {
                    clearInterval(timerInterval);
                    timerEl.textContent = "Время вышло!";
                    checkAnswers();
                    return;
                }
                const minutes = Math.floor(timeLeft / 60);
                let seconds = timeLeft % 60;
                seconds = seconds < 10 ? '0' + seconds : seconds;
                timerEl.textContent = `${minutes}:${seconds}`;
            }, 1000);
        }

        function checkAnswers() {
            if (timerInterval) {
                clearInterval(timerInterval);
            }
            checkBtn.disabled = true;
            const inputs = document.querySelectorAll('.answer-input');
            let correctCount = 0;
            inputs.forEach((input, index) => {
                const userAnswer = parseInt(input.value, 10);
                const correctAnswer = generatedProblems[index].answer;
                generatedProblems[index].userAnswer = isNaN(userAnswer) ? 'нет ответа' : userAnswer;
                if (userAnswer === correctAnswer) {
                    progressSquares[index].classList.add('correct');
                    correctCount++;
                } else {
                    progressSquares[index].classList.add('incorrect');
                }
                input.disabled = true;
            });
            scoreTextEl.textContent = `Вы решили правильно ${correctCount} из 3 примеров.`;
            resultsEl.classList.remove('hidden');
            printBtn.classList.remove('hidden');
        }
        
        function printResults() {
            let printContent = `
                <style>
                    body { font-family: Arial, sans-serif; }
                    h1 { text-align: center; }
                    .problem-item { margin-bottom: 20px; font-size: 16px; border-bottom: 1px solid #ccc; padding-bottom: 10px; }
                    .correct { color: green; font-weight: bold; }
                    .incorrect { color: red; font-weight: bold; }
                </style>
                <h1>Результаты тренажёра "Решение уравнений"</h1>
            `;
            generatedProblems.forEach((p, index) => {
                const isCorrect = p.userAnswer === p.answer;
                const displayProblem = p.problem.replace(/x/g, ' x ');
                printContent += `
                    <div class="problem-item">
                        <p><b>Задание ${index + 1}:</b> ${displayProblem}</p>
                        <p><b>Ваш ответ:</b> <span class="${isCorrect ? 'correct' : 'incorrect'}">${p.userAnswer}</span></p>
                        ${!isCorrect ? `<p><b>Правильный ответ:</b> ${p.answer}</p>` : ''}
                    </div>
                `;
            });
            const printWindow = window.open('', '_blank');
            printWindow.document.write(printContent);
            printWindow.document.close();
            printWindow.print();
        }

        checkBtn.addEventListener('click', checkAnswers);
        printBtn.addEventListener('click', printResults);
        
        init();
    </script>
</body>
</html>
